
&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("ОбработатьАктивизациюСтроки", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьАктивизациюСтроки() Экспорт
	
	ДанныеСтроки = Элементы.Список.ДанныеСтроки(Элементы.Список.ТекущаяСтрока);
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОбработатьАктивизациюСтрокиНаСервере(ДанныеСтроки);
	
	РМ_MarkdownКлиент.ПриСменеСтраницыПоляКомментария(ЭтаФорма, Элементы.РМ_Страницы_ОписаниеЗадачи,  Элементы.РМ_Страница_Просмотр_ОписаниеЗадачи);
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьАктивизациюСтрокиНаСервере(ДанныеСтроки)
	
	ЗаполнитьОписаниеЗадачи(ДанныеСтроки);
	ЗапомнитьТекущийПроект(ДанныеСтроки);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОписаниеЗадачи(ДанныеСтроки)

	ОписаниеЗадачи = "";

	Если ДанныеСтроки.Свойство("Ссылка") Тогда
		ОбъектОписания = ДанныеСтроки.Ссылка;
	ИначеЕсли ДанныеСтроки.Свойство("Владелец") Тогда
		ОбъектОписания = ДанныеСтроки.Владелец;
	Иначе
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОписанияПоОбъектам.Описание КАК Описание,
	|	ОписанияВХранилищах.Хранилище КАК Хранилище
	|ИЗ
	|	РегистрСведений.ОписанияПоОбъектам КАК ОписанияПоОбъектам
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОписанияВХранилищах КАК ОписанияВХранилищах
	|		ПО ОписанияПоОбъектам.Описание = ОписанияВХранилищах.Описание
	|ГДЕ
	|	ОписанияПоОбъектам.Объект = &Объект";
	
	Запрос.УстановитьПараметр("Объект", ОбъектОписания);
	
	ВыборкаДетальныеЗаписи = Запрос.Выполнить().Выбрать();
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Описание = ВыборкаДетальныеЗаписи.Хранилище.Получить();
		Если ЗначениеЗаполнено(Описание) Тогда
			ОписаниеЗадачи = Описание;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗапомнитьТекущийПроект(ДанныеСтроки)
	
	Если Не ДанныеСтроки.Свойство("Владелец") Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыСеанса.ТекущийПроект = ДанныеСтроки.Владелец;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ПараметрыПоляРедактированияОписания = РМ_MarkdownСервер.НовыеПараметрыПоляРедактированияОписания();
	ПараметрыПоляРедактированияОписания.Форма = ЭтотОбъект;
	ПараметрыПоляРедактированияОписания.ГруппаЭлементовТекста = Элементы.ОписаниеЗадачи;
	ПараметрыПоляРедактированияОписания.ПутьКДанным = "ОписаниеЗадачи";
	ПараметрыПоляРедактированияОписания.ПереходВРедактированиеИзПросмотра = Истина;
	РМ_MarkdownСервер.ВставитьПолеРедактированияТекстаНаФорму(ПараметрыПоляРедактированияОписания);

КонецПроцедуры

//@skip-check module-unused-method
&НаКлиенте
Процедура РМ_Подключаемый_ОбработкаКомандыПоляКомментария(Команда)
	
	ДанныеСтроки = Элементы.Список.ДанныеСтроки(Элементы.Список.ТекущаяСтрока);
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если Команда.Имя = "РМ_ЗакончитьРедактирование_ОписаниеЗадачи" Тогда
		СохранитьОписание(ДанныеСтроки, ОписаниеЗадачи);
		Элементы.РМ_Страницы_ОписаниеЗадачи.ТекущаяСтраница = Элементы.РМ_Страница_Просмотр_ОписаниеЗадачи;
		РМ_MarkdownКлиент.ПриСменеСтраницыПоляКомментария(ЭтаФорма, Элементы.РМ_Страницы_ОписаниеЗадачи,  Элементы.РМ_Страница_Просмотр_ОписаниеЗадачи);
		
		Элементы.Список.Обновить();
	ИначеЕсли Команда.Имя = "РМ_НачатьРедактирование_ОписаниеЗадачи" Тогда
		// Изменить
		Элементы.РМ_Страницы_ОписаниеЗадачи.ТекущаяСтраница = Элементы.РМ_Страница_Редактирование_ОписаниеЗадачи;
		РМ_MarkdownКлиент.ПриСменеСтраницыПоляКомментария(ЭтаФорма, Элементы.РМ_Страницы_ОписаниеЗадачи, Элементы.РМ_Страница_Редактирование_ОписаниеЗадачи);
	Иначе
		РМ_MarkdownКлиент.ОбработкаКомандыПоляКомментария(ЭтаФорма, Команда);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СохранитьОписание(ДанныеСтроки, ОписаниеЗадачи)
	
	Если ДанныеСтроки.Свойство("Ссылка") Тогда
		ОбъектОписания = ДанныеСтроки.Ссылка;
	ИначеЕсли ДанныеСтроки.Свойство("Владелец") Тогда
		ОбъектОписания = ДанныеСтроки.Владелец;
	Иначе
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОписанияПоОбъектам.Описание
	|ИЗ
	|	РегистрСведений.ОписанияПоОбъектам КАК ОписанияПоОбъектам
	|ГДЕ
	|	ОписанияПоОбъектам.Объект = &Объект";
	
	Запрос.УстановитьПараметр("Объект", ОбъектОписания);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		ИдентификаторЗадачи = Строка(ОбъектОписания.УникальныйИдентификатор());
		
		ИскомоеОписание = Справочники.Описания.НайтиПоНаименованию(ИдентификаторЗадачи);
		Если ЗначениеЗаполнено(ИскомоеОписание) Тогда
			Описание = ИскомоеОписание;
		Иначе
			НовоеОписание = Справочники.Описания.СоздатьЭлемент();
			НовоеОписание.УстановитьНовыйКод();
			НовоеОписание.Наименование = ИдентификаторЗадачи;
			НовоеОписание.Записать();
			
			Описание = НовоеОписание.Ссылка;
		КонецЕсли;
		
		МенеджерЗаписи = РегистрыСведений.ОписанияПоОбъектам.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Описание = Описание;
		МенеджерЗаписи.Объект = ОбъектОписания;
		МенеджерЗаписи.Записать();
	Иначе
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий();

		Описание = ВыборкаДетальныеЗаписи.Описание;
	КонецЕсли;
	
	МенеджерЗаписи = РегистрыСведений.ОписанияВХранилищах.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Описание = Описание;
	МенеджерЗаписи.Хранилище = Новый ХранилищеЗначения(ОписаниеЗадачи, Новый СжатиеДанных(9));
	МенеджерЗаписи.Записать();
	
КонецПроцедуры

//@skip-check module-unused-method
&НаКлиенте
Процедура РМ_Подключаемый_ПриНажатииПоляПросмотраКомментария(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	РМ_MarkdownКлиент.ПриНажатииПоляПросмотраКомментария(ЭтаФорма, Элемент, ДанныеСобытия, СтандартнаяОбработка);
	
КонецПроцедуры

