
&НаКлиенте
Процедура ЗадачиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "СсылкаНаСистемуУчетаЗадач" Тогда
		СтандартнаяОбработка = Ложь;
		
		ДанныеСтроки = Элементы.Задачи.ДанныеСтроки(ВыбраннаяСтрока);
		Если ДанныеСтроки = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		ОбщегоНазначенияКлиент.ЗапуститьПриложениеБезОбработкиОтвета(ДанныеСтроки.СсылкаНаСистемуУчетаЗадач);
	ИначеЕсли ТипЗнч(ВыбраннаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
		СтандартнаяОбработка = Ложь;
		
		ПоказатьЗначение(Неопределено, ВыбраннаяСтрока.Ключ);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьДатуВизуализацииТрудозатрат(Команда)
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ПослеВыбораДатыВизуализацииТрудозатрат", ЭтотОбъект);
	ПоказатьВводДаты(ОповещениеОЗавершении, ДатаПланирования, ЧастиДаты.Дата);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораДатыВизуализацииТрудозатрат(Дата, ДополнительныеПараметры) Экспорт
	
	ДатаПланирования = Дата;
	ИнициализироватьПланировщик();
	ОбновитьВизуализациюТрудозатрат();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВизуализациюТрудозатратПринудительно(Команда)
	
	ОбновитьВизуализациюТрудозатрат();
	
	Элементы.Задачи.Обновить();
	Элементы.Замеры.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьВизуализациюТрудозатрат()
	
	ПланировщикТрудозатрат.Элементы.Очистить();
	ИтогоТрудозатраты = 0;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Замеры.Ссылка КАК ЗамерСсылка,
	|	ВЫБОР
	|		КОГДА ОписанияПоОбъектам.Описание ЕСТЬ NULL
	|			ТОГДА """"
	|		ИНАЧЕ ОписанияПоОбъектам.Описание.Текст
	|	КОНЕЦ КАК ЗамерКомментарий,
	|	Замеры.ДатаВремяНачала КАК ЗамерДатаВремяНачала,
	|	Замеры.ДатаВремяОкончания КАК ЗамерДатаВремяОкончания,
	|	Замеры.Владелец КАК ЗадачаСсылка,
	|	ПРЕДСТАВЛЕНИЕ(Замеры.Владелец) КАК ЗадачаСтрокой,
	|	Замеры.Владелец.Владелец.ЛичноеВремя КАК ЭтоЛичноеВремя,
	|	Замеры.Затрачено КАК Затрачено
	|ИЗ
	|	Справочник.Замеры КАК Замеры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОписанияПоОбъектам КАК ОписанияПоОбъектам
	|		ПО Замеры.Ссылка = ОписанияПоОбъектам.Объект
	|ГДЕ
	|	Замеры.ДатаВремяНачала >= &ДатаВремяНачала
	|	И Замеры.ДатаВремяОкончания <= &ДатаВремяОкончания";
	
	Запрос.УстановитьПараметр("ДатаВремяНачала", НачалоДня(ДатаПланирования));
	Запрос.УстановитьПараметр("ДатаВремяОкончания", КонецДня(ДатаПланирования));
	Запрос.УстановитьПараметр("ДатаВремяТекущиее", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("ПустаяДата", '00010101');
	
	ВыборкаДетальныеЗаписи = Запрос.Выполнить().Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НовыйЭлементПланировщика = ПланировщикТрудозатрат.Элементы.Добавить(ВыборкаДетальныеЗаписи.ЗамерДатаВремяНачала, ВыборкаДетальныеЗаписи.ЗамерДатаВремяОкончания);
		НовыйЭлементПланировщика.Значение = ВыборкаДетальныеЗаписи.ЗамерСсылка;
		
		ИзСекунд = ОбщегоНазначенияКлиентСервер.ИзСекунд(ВыборкаДетальныеЗаписи.Затрачено);
		ЗатраченоСтрокой = ОбщегоНазначенияКлиентСервер.ПредставлениеТрудозатрат(, ИзСекунд.Часов, ИзСекунд.Минут);
		
		ЗамерОписание = "<Описание замера.>";
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ЗамерКомментарий) Тогда
			ЗамерОписание = ВыборкаДетальныеЗаписи.ЗамерКомментарий;
		КонецЕсли;
		
		Содержимое = Новый Массив();
		Содержимое.Добавить(СтрШаблон("[%1]", ЗатраченоСтрокой));
		Содержимое.Добавить(" ");
		Содержимое.Добавить(Новый ФорматированнаяСтрока(ВыборкаДетальныеЗаписи.ЗадачаСтрокой, Новый Шрифт(,, Истина), WebЦвета.Коричневый,, ПолучитьНавигационнуюСсылку(ВыборкаДетальныеЗаписи.ЗадачаСсылка)));
		Содержимое.Добавить(Символы.ПС);
		Содержимое.Добавить(Новый ФорматированнаяСтрока(ЗамерОписание, , WebЦвета.Серый,, ПолучитьНавигационнуюСсылку(ВыборкаДетальныеЗаписи.ЗамерСсылка)));
		НовыйЭлементПланировщика.Текст = Новый ФорматированнаяСтрока(Содержимое);
		
		НовыйЭлементПланировщика.Подсказка = ВыборкаДетальныеЗаписи.ЗамерКомментарий;		
		
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ЗамерКомментарий) Тогда
			НовыйЭлементПланировщика.Картинка = БиблиотекаКартинок.ОформлениеЗнакФлажок;
		Иначе
			НовыйЭлементПланировщика.Картинка = БиблиотекаКартинок.ОформлениеЗнакВоcклицательныйЗнак;
		КонецЕсли;
		
		Если ВыборкаДетальныеЗаписи.ЭтоЛичноеВремя Тогда
			НовыйЭлементПланировщика.ЦветФона = WebЦвета.СеребристоСерый;
		Иначе
			НовыйЭлементПланировщика.ЦветФона = WebЦвета.БледноЗеленый;
			
			ИтогоТрудозатраты = ИтогоТрудозатраты + ВыборкаДетальныеЗаписи.Затрачено;
		КонецЕсли;
		
		Измерения = Новый Соответствие;
		Измерения.Вставить("Корень", "ФактическиеТрудозатраты");
		НовыйЭлементПланировщика.ЗначенияИзмерений = Новый ФиксированноеСоответствие(Измерения);
	КонецЦикла;
	
	Прогресс = ИтогоТрудозатраты;
	
	ИзСекунд = ОбщегоНазначенияКлиентСервер.ИзСекунд(ИтогоТрудозатраты);
	ИтогоТрудозатратыЗаДень = ОбщегоНазначенияКлиентСервер.ПредставлениеТрудозатрат(, ИзСекунд.Часов, ИзСекунд.Минут);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияФормыЗамера(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Замер = Неопределено;
	Если ДополнительныеПараметры.Свойство("Замер", Замер) И ЗначениеЗаполнено(Замер) Тогда
// TODO: заменить на описание
//		Если ДополнительныеПараметры.Свойство("КомментарийКЗамеру") Тогда
//			ИскомыйЗамер = ПланировщикТрудозатрат.Элементы.Найти(Замер);
//			ИскомыйЗамер.Подсказка = ДополнительныеПараметры.КомментарийКЗамеру;
//			Если ЗначениеЗаполнено(ИскомыйЗамер.Подсказка) Тогда
//				ИскомыйЗамер.Картинка = БиблиотекаКартинок.ОформлениеЗнакФлажок;
//			КонецЕсли;
//		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗадачиПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("ОбработатьАктивизациюСтрокиЗадачи", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьАктивизациюСтрокиЗадачи() Экспорт
	
	ДанныеСтроки = Элементы.Задачи.ДанныеСтроки(Элементы.Задачи.ТекущаяСтрока);
	Если ДанныеСтроки = Неопределено Тогда
		УстановитьОбъектОписания();
		
		Возврат;
	КонецЕсли;
	
	Если ДанныеСтроки.Свойство("Ссылка") Тогда
		ТекущаяЗадача = ДанныеСтроки.Ссылка;
		
		УстановитьОбъектОписания(ДанныеСтроки.Ссылка);
	ИначеЕсли ДанныеСтроки.Свойство("Владелец") Тогда
		УстановитьОбъектОписания(ДанныеСтроки.Владелец);
	Иначе
		Возврат;
	КонецЕсли;
	
	ЗапомнитьТекущийПроект(ТекущийОбъектОписания);
	
	ОбновитьОписаниеПоОбъекту();
	ОбновитьПредставлениеОписания();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПредставлениеОписания() Экспорт
	
	РМ_MarkdownКлиент.ПриСменеСтраницыПоляКомментария(ЭтотОбъект, Элементы.РМ_Страницы_ПредставлениеОписания, Элементы.РМ_Страница_Просмотр_ПредставлениеОписания);
	
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикТрудозатратПриАктивизации(Элемент)
	
	Если Элемент.ВыделенныеЭлементы.Количество() Тогда
		ТекущийЗамер = Элемент.ВыделенныеЭлементы[0].Значение;
		Элементы.Замеры.ТекущаяСтрока = ТекущийЗамер;
		
		ТекущаяЗадача = ЗадачаЗамера(ТекущийЗамер);
		Элементы.Задачи.ТекущаяСтрока = ТекущаяЗадача;
		
		Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаЗадачи Тогда
			УстановитьОбъектОписания(ТекущаяЗадача);
		Иначе
			УстановитьОбъектОписания(ТекущийЗамер);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОбъектОписания(ТекущаяСсылка = Неопределено) 
	
	ТекущийОбъектОписания = ТекущаяСсылка;
	
	Если ТипЗнч(ТекущаяСсылка) = Тип("СправочникСсылка.Задачи") Тогда
		Элементы.ОбъектОписания.Заголовок = "Задача";
	ИначеЕсли ТипЗнч(ТекущаяСсылка) = Тип("СправочникСсылка.Замеры") Тогда
		Элементы.ОбъектОписания.Заголовок = "Замер";
	ИначеЕсли ТипЗнч(ТекущаяСсылка) = Тип("СправочникСсылка.Проекты") Тогда
		Элементы.ОбъектОписания.Заголовок = "Проект";
	Иначе
		Элементы.ОбъектОписания.Заголовок = "Неопределено";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьОписаниеПоОбъекту()
	
	ДанныеОписания = ОбщегоНазначенияВызовСервера.ДанныеОписания(ТекущийОбъектОписания);
	Описание = ДанныеОписания.Ссылка;
	ПредставлениеОписания = ДанныеОписания.Текст;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗапомнитьТекущийПроект(ТекущийПроект)
	
	Если ТипЗнч(ТекущийПроект) = Тип("СправочникСсылка.Задачи") Тогда
		ПараметрыСеанса.ТекущийПроект = ТекущийПроект.Владелец;
	Иначе
		ПараметрыСеанса.ТекущийПроект = ТекущийПроект;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	НарисоватьЭлементыРаботыСОписаниемЗадачи();
	
	ДатаПланирования = ТекущаяДатаСеанса();

	ИнициализироватьПланировщик();
	ОбновитьВизуализациюТрудозатрат();
	
	Представление = Константы.ПредставлениеСистемыУчетаЗадач.Получить();
	Если Не Представление = Неопределено Тогда
		Элементы.СсылкаНаСистемуУчетаЗадач.Заголовок = Представление;
	КонецЕсли;
	
	СброситьРазмерыИПоложениеОкна();
	
КонецПроцедуры

&НаСервере
Процедура СброситьРазмерыИПоложениеОкна()
	
	ИмяПользователя = ПользователиИнформационнойБазы.ТекущийПользователь().Имя;
	
	УстановитьПривилегированныйРежим(Истина);
	ХранилищеСистемныхНастроек.Удалить(ЭтотОбъект.ИмяФормы, "", ИмяПользователя);
	УстановитьПривилегированныйРежим(Ложь);
	
	ЭтотОбъект.КлючСохраненияПоложенияОкна = Строка(Новый УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьПланировщик()
	
	ДатаНачала = НачалоДня(ДатаПланирования);
	ДатаОкончания = КонецДня(ДатаПланирования);
	
	ПланировщикТрудозатрат.ШкалаВремени.Положение = ПоложениеШкалыВремени.Лево;
	ПланировщикТрудозатрат.ОтображениеВремениЭлементов = ОтображениеВремениЭлементовПланировщика.ВремяНачалаИКонца;
	ПланировщикТрудозатрат.ЕдиницаПериодическогоВарианта = ТипЕдиницыШкалыВремени.День;
	ПланировщикТрудозатрат.КратностьПериодическогоВарианта = 1;
	ПланировщикТрудозатрат.ОтображатьПеренесенныеЗаголовки = Истина;
	ПланировщикТрудозатрат.ОтображатьПеренесенныеЗаголовкиШкалыВремени = Истина;
	ПланировщикТрудозатрат.НачалоПериодаОтображения = ДатаНачала;
	ПланировщикТрудозатрат.КонецПериодаОтображения = ДатаОкончания;
	ПланировщикТрудозатрат.ОтображатьТекущуюДату = Истина;
	ПланировщикТрудозатрат.ВыравниватьГраницыЭлементовПоШкалеВремени = Истина;
	
	ПланировщикТрудозатрат.ТекущиеПериодыОтображения.Очистить();
	ПланировщикТрудозатрат.ТекущиеПериодыОтображения.Добавить(ДатаНачала + 6*60*60, ДатаОкончания);
	
	УдалитьЭлементыШкалыВремени();
	
	ЭлементШкалыВремени = ПланировщикТрудозатрат.ШкалаВремени.Элементы.Добавить();
	ЭлементШкалыВремени.Единица = ТипЕдиницыШкалыВремени.Минута;
	ЭлементШкалыВремени.Кратность = 5;
	ЭлементШкалыВремени.Формат = "ДФ='HH:mm'";
	ЭлементШкалыВремени.ОтображатьПериодическиеМетки = Истина;
	ПланировщикТрудозатрат.ШкалаВремени.Элементы.Удалить(ПланировщикТрудозатрат.ШкалаВремени.Элементы[0]);	
	
	ПланировщикТрудозатрат.Измерения.Очистить();
	
	Измерение = ПланировщикТрудозатрат.Измерения.Добавить("Корень");
	Измерение.Элементы.Добавить("ФактическиеТрудозатраты", "Трудозатраты");

КонецПроцедуры

&НаСервере
Процедура УдалитьЭлементыШкалыВремени() 
	
	КоличествоЭлементовВШкалеВремени = ПланировщикТрудозатрат.ШкалаВремени.Элементы.Количество();
	Для Счетчик = 0 По КоличествоЭлементовВШкалеВремени Цикл
		ПланировщикТрудозатрат.ШкалаВремени.Элементы.Удалить(ПланировщикТрудозатрат.ШкалаВремени.Элементы[0]);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура НарисоватьЭлементыРаботыСОписаниемЗадачи()
	
	РМ_MarkdownСервер.ВставитьПолеРедактированияТекстаНаФорму(ЭтотОбъект, Элементы.ГруппаПредставлениеОписания,
		"ПредставлениеОписания", "ones", Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикТрудозатратПередСозданием(Элемент, Начало, Конец, ЗначенияИзмерений, Текст, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(ТекущаяЗадача) Тогда
		Текст = ТекущаяЗадача;
	Иначе 
		СтандартнаяОбработка = Ложь;
		ПоказатьПредупреждение(, "Выбери задачу");
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПланировщикТрудозатратПриОкончанииРедактирования(Элемент, НовыйЭлемент, ОтменаРедактирования)
	
	ТекущийЭлементПланировщика = Элемент.ВыделенныеЭлементы[0];
	Если НовыйЭлемент Тогда
		Замер = Новый Структура;
		Замер.Вставить("Начало", ОбщегоНазначенияКлиентСервер.ОкруглитьМинутыВДате(ТекущийЭлементПланировщика.Начало));
		Замер.Вставить("Конец", ОбщегоНазначенияКлиентСервер.ОкруглитьМинутыВДате(ТекущийЭлементПланировщика.Конец));
		Замер.Вставить("Значение", ТекущаяЗадача);
		НовыйЗамер = СоздатьЗамер(Замер);
		ТекущийЭлементПланировщика.Значение = НовыйЗамер;
	Иначе
		Замер = Новый Структура;
		Замер.Вставить("Значение", ТекущийЭлементПланировщика.Значение);
		Замер.Вставить("Начало", ОбщегоНазначенияКлиентСервер.ОкруглитьМинутыВДате(ТекущийЭлементПланировщика.Начало));
		Замер.Вставить("Конец", ОбщегоНазначенияКлиентСервер.ОкруглитьМинутыВДате(ТекущийЭлементПланировщика.Конец));
		ИзменитьЗамер(Замер);
	КонецЕсли;
	
	ТекущийЭлементПланировщика.Текст = ОбщегоНазначенияВызовСервера.ПредставлениеЗамера(ТекущийЭлементПланировщика.Значение);
	
	ОбновитьВизуализациюТрудозатрат();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СоздатьЗамер(Замер) 
	
	НовыйЗамер = Справочники.Замеры.СоздатьЭлемент();
	НовыйЗамер.ДатаВремяНачала = Замер.Начало;
	НовыйЗамер.ДатаВремяОкончания = Замер.Конец;
	НовыйЗамер.Владелец = Замер.Значение;
	НовыйЗамер.Записать();
	
	Возврат НовыйЗамер.Ссылка;
	
КонецФункции

&НаКлиенте
Процедура ПланировщикТрудозатратПередУдалением(Элемент, Отказ)
	
	ПланировщикТрудозатратПередУдалениемНаСервере(Элемент.ВыделенныеЭлементы[0].Значение);
	
КонецПроцедуры

&НаСервере
Процедура ПланировщикТрудозатратПередУдалениемНаСервере(Замер)
	
	ЗамерОбъект = Замер.ПолучитьОбъект();
	ЗамерОбъект.Удалить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикТрудозатратВыбор(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если Элемент.ВыделенныеЭлементы.Количество() Тогда
		ПараметрыФормы = Новый Структура();
		
		Замер = Элементы.ПланировщикТрудозатрат.ВыделенныеЭлементы[0].Значение;
		ПараметрыФормы.Вставить("Ключ", Замер);
		
		КонтекстФормы = Новый Структура();
		КонтекстФормы.Вставить("Замер", Замер);
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияФормыЗамера", ЭтотОбъект, КонтекстФормы);
		
		ОткрытьФорму("Справочник.Замеры.ФормаОбъекта", ПараметрыФормы, ЭтотОбъект,,,, Оповещение);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЗадачу(Команда)
	
	Если Элементы.ПланировщикТрудозатрат.ВыделенныеЭлементы.Количество() Тогда
		ПоказатьЗначение(, ЗадачаЗамера(Элементы.ПланировщикТрудозатрат.ВыделенныеЭлементы[0].Значение));
	КонецЕсли;
	
КонецПроцедуры


&НаСервереБезКонтекста
Функция ЗадачаЗамера(Замер) 
	
	Возврат Замер.Владелец;
	
КонецФункции

&НаКлиенте
Процедура ПланировщикТрудозатратПередНачаломБыстрогоРедактирования(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	//Если Элементы.ПланировщикТрудозатрат.ВыделенныеЭлементы.Количество() Тогда
	//	Элементы.Задачи.ТекущаяСтрока = ЗадачаЗамера(Элементы.ПланировщикТрудозатрат.ВыделенныеЭлементы[0].Значение);
	//КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ИзменитьЗамер(Замер) 
	
	ЗамерОбъект = Замер.Значение.ПолучитьОбъект();
	ЗамерОбъект.ДатаВремяНачала = Замер.Начало;
	ЗамерОбъект.ДатаВремяОкончания = Замер.Конец;
	ЗамерОбъект.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьОписание(Команда)
	
	ПараметрыИзмененияОписания = ОбщегоНазначенияКлиент.НовыеПараметрыИзмененияОписания();
	ПараметрыИзмененияОписания.ОбъектОписания = ТекущийОбъектОписания;
	ПараметрыИзмененияОписания.Описание = Описание;
	ПараметрыИзмененияОписания.ФормаВладелец = ЭтотОбъект;
	ПараметрыИзмененияОписания.ОповещениеОбИзменении = Новый ОписаниеОповещения("ПослеИзмененияВыбораОписание", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ИзменитьОписание(ПараметрыИзмененияОписания);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьОписание(Команда)
	
	ПараметрыВыбораОписания = ОбщегоНазначенияКлиент.НовыеПараметрыВыбораОписания();
	ПараметрыВыбораОписания.ОбъектОписания = ТекущийОбъектОписания;
	ПараметрыВыбораОписания.ФормаВладелец = ЭтотОбъект;
	ПараметрыВыбораОписания.ОповещениеОВыборе = Новый ОписаниеОповещения("ПослеИзмененияВыбораОписание", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ВыбратьОписание(ПараметрыВыбораОписания);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьОписание(Команда)
	
	ОбщегоНазначенияВызовСервера.УдалитьОписание(ТекущийОбъектОписания);
	
	ОбновитьОписаниеПоОбъекту();
	ОбновитьПредставлениеОписания();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеИзмененияВыбораОписание(Результат, ДополнительныеПараметры) Экспорт
	
	ОбновитьОписаниеПоОбъекту();
	ОбновитьПредставлениеОписания();
	
КонецПроцедуры

&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаЗадачи Тогда
		УстановитьОбъектОписания(ТекущаяЗадача);
	Иначе
		УстановитьОбъектОписания(ТекущийЗамер);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗамерыПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("ОбработатьАктивизациюСтрокиЗамеры", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьАктивизациюСтрокиЗамеры() Экспорт
	
	ДанныеСтроки = Элементы.Замеры.ДанныеСтроки(Элементы.Замеры.ТекущаяСтрока);
	Если ДанныеСтроки = Неопределено Тогда
		УстановитьОбъектОписания();
		
		Возврат;
	КонецЕсли;
	
	Если ДанныеСтроки.Свойство("Ссылка") Тогда
		УстановитьОбъектОписания(ДанныеСтроки.Ссылка);
	ИначеЕсли ДанныеСтроки.Свойство("Владелец") Тогда
		УстановитьОбъектОписания(ДанныеСтроки.Владелец);
	Иначе
		Возврат;
	КонецЕсли;
	
	ОбновитьОписаниеПоОбъекту();
	ОбновитьПредставлениеОписания();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗамерыПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
	ДанныеОписания = ОбщегоНазначенияВызовСервера.ДанныеОписания(ПараметрыПеретаскивания.Значение[0]);
	ОбщегоНазначенияВызовСервера.СвязатьОписаниеСОбъектом(ДанныеОписания.Ссылка, Строка);
	Элементы.Замеры.ТекущаяСтрока = Строка;
	
	УстановитьОбъектОписания(Строка);
	ОбновитьОписаниеПоОбъекту();
	ОбновитьПредставлениеОписания();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗамерыПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Копирование;
	
КонецПроцедуры
